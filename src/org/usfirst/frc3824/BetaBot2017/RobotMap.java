// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.BetaBot2017;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/*
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController chassisMotorRightA;
    public static SpeedController chassisMotorRightB;
    public static SpeedController chassisMotorLeftA;
    public static SpeedController chassisMotorLeftB;
    public static RobotDrive chassisRobotDrive;
    public static Encoder chassisEncoderRight;
    public static Encoder chassisEncoderLeft;
    public static AnalogInput chassisUltrasound;
    public static AnalogGyro chassisGyro;
    public static SpeedController climberClimberMotorA;
    public static SpeedController climberClimberMotorB;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	public static void init()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        chassisMotorRightA = new Talon(1);
        LiveWindow.addActuator("Chassis", "Motor Right A", (Talon) chassisMotorRightA);
        
        chassisMotorRightB = new Talon(2);
        LiveWindow.addActuator("Chassis", "Motor Right B", (Talon) chassisMotorRightB);
        
        chassisMotorLeftA = new Talon(3);
        LiveWindow.addActuator("Chassis", "Motor Left A", (Talon) chassisMotorLeftA);
        
        chassisMotorLeftB = new Talon(4);
        LiveWindow.addActuator("Chassis", "Motor Left B", (Talon) chassisMotorLeftB);
        
        chassisRobotDrive = new RobotDrive(chassisMotorLeftA, chassisMotorLeftB,
              chassisMotorRightA, chassisMotorRightB);
        
        chassisRobotDrive.setSafetyEnabled(false);
        chassisRobotDrive.setExpiration(0.1);
        chassisRobotDrive.setSensitivity(0.5);
        chassisRobotDrive.setMaxOutput(1.0);

        chassisEncoderRight = new Encoder(0, 1, false, EncodingType.k1X);
        LiveWindow.addSensor("Chassis", "Encoder Right", chassisEncoderRight);
        chassisEncoderRight.setDistancePerPulse(0.0242914979757085);
        chassisEncoderRight.setPIDSourceType(PIDSourceType.kRate);
        chassisEncoderLeft = new Encoder(2, 3, false, EncodingType.k1X);
        LiveWindow.addSensor("Chassis", "Encoder Left", chassisEncoderLeft);
        chassisEncoderLeft.setDistancePerPulse(0.0242914979757085);
        chassisEncoderLeft.setPIDSourceType(PIDSourceType.kRate);
        chassisUltrasound = new AnalogInput(1);
        LiveWindow.addSensor("Chassis", "Ultrasound", chassisUltrasound);
        
        chassisGyro = new AnalogGyro(0);
        LiveWindow.addSensor("Chassis", "Gyro", chassisGyro);
        chassisGyro.setSensitivity(0.007);
        climberClimberMotorA = new Talon(5);
        LiveWindow.addActuator("Climber", "Climber Motor A", (Talon) climberClimberMotorA);
        
        climberClimberMotorB = new Talon(6);
        LiveWindow.addActuator("Climber", "Climber Motor B", (Talon) climberClimberMotorB);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	}
}
